{"ast":null,"code":"var _jsxFileName = \"D:\\\\Morsy_Dharmik_Work\\\\MORSY_ASS\\\\navbar_react_js\\\\src\\\\components\\\\Addservice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addservice = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [towerName, setTowerName] = useState(\"\");\n  const [towers, setTowers] = useState([]); // State to store towers and their wings\n  const [newWing, setNewWing] = useState(\"\"); // State to store the new wing being added\n\n  const setImageAction = async event => {\n    event.preventDefault();\n    if (!file || !towerName || towers.length === 0) {\n      console.log(\"Please select a file, enter a tower name, and add at least one wing\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"towerName\", towerName);\n    formData.append(\"towers\", JSON.stringify(towers)); // Include towers in FormData\n\n    try {\n      const response = await fetch(\"http://localhost:8000/admin/addservi\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Successfully uploaded image\");\n        // You can do something after a successful upload, e.g., redirect or display a success message.\n      } else {\n        console.log(\"Error uploading image\");\n        // Handle the error, e.g., show an error message to the user.\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleTowerNameChange = event => {\n    setTowerName(event.target.value);\n  };\n  const handleNewWingChange = event => {\n    setNewWing(event.target.value);\n  };\n  const addTower = () => {\n    if (towerName) {\n      setTowers([...towers, {\n        towerName,\n        wings: []\n      }]);\n      setTowerName(\"\");\n    }\n  };\n  const addWingToTower = () => {\n    if (newWing && towerName) {\n      const updatedTowers = towers.map(tower => tower.towerName === towerName ? {\n        ...tower,\n        wings: [...tower.wings, newWing]\n      } : tower);\n      setTowers(updatedTowers);\n      setNewWing(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setImageAction,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"towerName\",\n        placeholder: \"Enter Tower Name\",\n        value: towerName,\n        onChange: handleTowerNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addTower,\n        children: \"Add Tower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), towers.map((tower, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: `Wings for Tower ${tower.towerName}:`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: tower.wings.map((wing, wingIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: wing\n          }, wingIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Wing Name\",\n          value: newWing,\n          onChange: handleNewWingChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addWingToTower,\n          children: \"Add Wing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Addservice, \"2+3o0FbFJBMdJnPlyqKYvFqtQz8=\");\n_c = Addservice;\nexport default Addservice;\nvar _c;\n$RefreshReg$(_c, \"Addservice\");","map":{"version":3,"names":["React","useState","Header","axios","useNavigate","jsxDEV","_jsxDEV","Addservice","_s","file","setFile","towerName","setTowerName","towers","setTowers","newWing","setNewWing","setImageAction","event","preventDefault","length","console","log","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","error","handleFileChange","target","files","handleTowerNameChange","value","handleNewWingChange","addTower","wings","addWingToTower","updatedTowers","map","tower","className","children","onSubmit","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","index","wing","wingIndex","_c","$RefreshReg$"],"sources":["D:/Morsy_Dharmik_Work/MORSY_ASS/navbar_react_js/src/components/Addservice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Header from '../components/Header.js'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Addservice = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n  const [towerName, setTowerName] = useState(\"\");\r\n  const [towers, setTowers] = useState([]); // State to store towers and their wings\r\n  const [newWing, setNewWing] = useState(\"\"); // State to store the new wing being added\r\n\r\n  const setImageAction = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!file || !towerName || towers.length === 0) {\r\n      console.log(\"Please select a file, enter a tower name, and add at least one wing\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    formData.append(\"towerName\", towerName);\r\n    formData.append(\"towers\", JSON.stringify(towers)); // Include towers in FormData\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/admin/addservi\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Successfully uploaded image\");\r\n        // You can do something after a successful upload, e.g., redirect or display a success message.\r\n      } else {\r\n        console.log(\"Error uploading image\");\r\n        // Handle the error, e.g., show an error message to the user.\r\n      }\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleTowerNameChange = (event) => {\r\n    setTowerName(event.target.value);\r\n  };\r\n\r\n  const handleNewWingChange = (event) => {\r\n    setNewWing(event.target.value);\r\n  };\r\n\r\n  const addTower = () => {\r\n    if (towerName) {\r\n      setTowers([...towers, { towerName, wings: [] }]);\r\n      setTowerName(\"\");\r\n    }\r\n  };\r\n\r\n  const addWingToTower = () => {\r\n    if (newWing && towerName) {\r\n      const updatedTowers = towers.map((tower) =>\r\n        tower.towerName === towerName\r\n          ? { ...tower, wings: [...tower.wings, newWing] }\r\n          : tower\r\n      );\r\n      setTowers(updatedTowers);\r\n      setNewWing(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <form onSubmit={setImageAction}>\r\n        <input type=\"file\" name=\"image\" onChange={handleFileChange} />\r\n        <br />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"towerName\"\r\n          placeholder=\"Enter Tower Name\"\r\n          value={towerName}\r\n          onChange={handleTowerNameChange}\r\n        />\r\n        <button type=\"button\" onClick={addTower}>\r\n          Add Tower\r\n        </button>\r\n        <br />\r\n        <br />\r\n        {towers.map((tower, index) => (\r\n          <div key={index}>\r\n            <label>{`Wings for Tower ${tower.towerName}:`}</label>\r\n            <ul>\r\n              {tower.wings.map((wing, wingIndex) => (\r\n                <li key={wingIndex}>{wing}</li>\r\n              ))}\r\n            </ul>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Wing Name\"\r\n              value={newWing}\r\n              onChange={handleNewWingChange}\r\n            />\r\n            <button type=\"button\" onClick={addWingToTower}>\r\n              Add Wing\r\n            </button>\r\n          </div>\r\n        \r\n        ))}\r\n\r\n        <br/>        \r\n        \r\n        <button type=\"submit\" name=\"upload\">\r\n          Upload\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Addservice"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}