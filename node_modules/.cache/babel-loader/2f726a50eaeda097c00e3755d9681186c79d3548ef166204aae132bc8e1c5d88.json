{"ast":null,"code":"var _jsxFileName = \"D:\\\\Morsy_Dharmik_Work\\\\MORSY_ASS\\\\navbar_react_js\\\\src\\\\components\\\\Addservice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Addservice = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const setImageAction = async event => {\n    event.preventDefault();\n    if (!file || !towerName || towers.length === 0) {\n      console.log(\"Please select a file, enter a tower name, and add at least one wing\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      const response = await fetch(\"http://localhost:2000/admin/addproperty\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Successfully uploaded image\");\n        // You can do something after a successful upload, e.g., redirect or display a success message.\n      } else {\n        console.log(\"Error uploading image\");\n        // Handle the error, e.g., show an error message to the user.\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: setImageAction,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"upload\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Addservice, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = Addservice;\nexport default Addservice;\nvar _c;\n$RefreshReg$(_c, \"Addservice\");","map":{"version":3,"names":["React","useState","Header","axios","useNavigate","jsxDEV","_jsxDEV","Addservice","_s","file","setFile","setImageAction","event","preventDefault","towerName","towers","length","console","log","formData","FormData","append","response","fetch","method","body","ok","error","handleFileChange","target","files","className","children","onSubmit","type","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Morsy_Dharmik_Work/MORSY_ASS/navbar_react_js/src/components/Addservice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Header from '../components/Header.js'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Addservice = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n\r\n    const setImageAction = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!file || !towerName || towers.length === 0) {\r\n            console.log(\"Please select a file, enter a tower name, and add at least one wing\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", file);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:2000/admin/addproperty\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log(\"Successfully uploaded image\");\r\n                // You can do something after a successful upload, e.g., redirect or display a success message.\r\n            } else {\r\n                console.log(\"Error uploading image\");\r\n                // Handle the error, e.g., show an error message to the user.\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <form onSubmit={setImageAction}>\r\n                <input type=\"file\" name=\"image\" onChange={handleFileChange} />\r\n                \r\n\r\n                <button type=\"submit\" name=\"upload\">\r\n                    Upload\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Addservice"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMU,cAAc,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACJ,IAAI,IAAI,CAACK,SAAS,IAAIC,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAC5CC,OAAO,CAACC,GAAG,CAAC,qEAAqE,CAAC;MAClF;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,IAAI,CAAC;IAE9B,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACbT,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C;MACJ,CAAC,MAAM;QACHD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpC;MACJ;IACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZV,OAAO,CAACU,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIhB,KAAK,IAAK;IAChCF,OAAO,CAACE,KAAK,CAACiB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpB1B,OAAA;MAAM2B,QAAQ,EAAEtB,cAAe;MAAAqB,QAAA,gBAC3B1B,OAAA;QAAO4B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,QAAQ,EAAER;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG9DlC,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAEpC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAhC,EAAA,CAjDKD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAoDhB,eAAeA,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}